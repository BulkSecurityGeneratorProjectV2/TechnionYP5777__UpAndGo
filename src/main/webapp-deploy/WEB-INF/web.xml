<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">
	<servlet>

		<servlet-name>gwt-log-remote-logger-servlet</servlet-name>
		<servlet-class>com.allen_sauer.gwt.log.server.RemoteLoggerServlet</servlet-class>

		<!-- These symbol maps parameters specify the server location where the 
			GWT compiler symbol maps are stored, which is used for stack trace deobfuscation: 
			- 'symbolMapsFileSystem' uses StackTraceDeobfuscator#fromFileSystem(String) 
			- 'symbolMapsResourcePath' uses StackTraceDeobfuscator#fromResource(String) 
			- "symbolMapsResourceUrl' uses StackTraceDeobfuscator#fromResource(String) -->
		<init-param>
			<!-- This value assumes a GWT compile with '-deploy war/WEB-INF/deploy/' -->
			<param-name>symbolMapsFileSystem</param-name>
			<!-- Modify the param-value based on your server environment. Some web 
				servers use your `war` directory as the 'current working dir', while other 
				vendors will do something different. You may use trial and error. Specify 
				the relative path you think should work, then check the server log after 
				forwarding the first client log message to the server. If the directory cannot 
				be found, gwt-log will report the full path which it tried. -->
			<param-value>WEB-INF/deploy/upandgo/symbolMaps/</param-value>
		</init-param>

	</servlet>

	<servlet-mapping>
		<servlet-name>gwt-log-remote-logger-servlet</servlet-name>
		<url-pattern>/upandgo/gwt-log</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>CoursesServiceImpl</servlet-name>
		<servlet-class>upandgo.server.CoursesServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>CoursesServiceImpl</servlet-name>
		<url-pattern>/upandgo/coursesService</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>gwt-log-remote-logger-servlet</servlet-name>
		<url-pattern>/upandgo/gwt-log</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>LoginServiceImpl</servlet-name>
		<servlet-class>upandgo.server.LoginServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>LoginServiceImpl</servlet-name>
		<url-pattern>/upandgo/login</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>ObjectifyFilter</filter-name>
		<filter-class>com.googlecode.objectify.ObjectifyFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ObjectifyFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>oauth2Callback</servlet-name>
		<servlet-class>upandgo.server.OAuth2Callback</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>oauth2Callback</servlet-name>
		<url-pattern>/oauth2callback/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>CalendarAuth</servlet-name>
		<servlet-class>upandgo.server.CalendarAuthServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CalendarAuth</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>